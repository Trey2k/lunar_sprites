#ifndef X11_KEYMAP_H
#define X11_KEYMAP_H

#include "core/input/keycodes.h"
#include "core/types/typedefs.h"

#include <X11/Xlib.h>

_FORCE_INLINE_ LSKeycode x11_map_key(uint32 x11_keycode) {
	switch (x11_keycode) {
		case 0x9:
			return LS_KEY_ESCAPE;
		case 0xA:
			return LS_KEY_1;
		case 0xB:
			return LS_KEY_2;
		case 0xC:
			return LS_KEY_3;
		case 0xD:
			return LS_KEY_4;
		case 0xE:
			return LS_KEY_5;
		case 0xF:
			return LS_KEY_6;
		case 0x10:
			return LS_KEY_7;
		case 0x11:
			return LS_KEY_8;
		case 0x12:
			return LS_KEY_9;
		case 0x13:
			return LS_KEY_0;
		case 0x14:
			return LS_KEY_MINUS;
		case 0x15:
			return LS_KEY_EQUAL;
		case 0x16:
			return LS_KEY_BACKSPACE;
		case 0x17:
			return LS_KEY_TAB;
		case 0x18:
			return LS_KEY_Q;
		case 0x19:
			return LS_KEY_W;
		case 0x1A:
			return LS_KEY_E;
		case 0x1B:
			return LS_KEY_R;
		case 0x1C:
			return LS_KEY_T;
		case 0x1D:
			return LS_KEY_Y;
		case 0x1E:
			return LS_KEY_U;
		case 0x1F:
			return LS_KEY_I;
		case 0x20:
			return LS_KEY_O;
		case 0x21:
			return LS_KEY_P;
		case 0x22:
			return LS_KEY_LEFT_BRACKET;
		case 0x23:
			return LS_KEY_RIGHT_BRACKET;
		case 0x24:
			return LS_KEY_ENTER;
		case 0x25:
			return LS_KEY_LEFT_CONTROL;
		case 0x26:
			return LS_KEY_A;
		case 0x27:
			return LS_KEY_S;
		case 0x28:
			return LS_KEY_D;
		case 0x29:
			return LS_KEY_F;
		case 0x2A:
			return LS_KEY_G;
		case 0x2B:
			return LS_KEY_H;
		case 0x2C:
			return LS_KEY_J;
		case 0x2D:
			return LS_KEY_K;
		case 0x2E:
			return LS_KEY_L;
		case 0x2F:
			return LS_KEY_SEMICOLON;
		case 0x30:
			return LS_KEY_APOSTROPHE;
		case 0x31:
			return LS_KEY_GRAVE_ACCENT;
		case 0x32:
			return LS_KEY_LEFT_SHIFT;
		case 0x33:
			return LS_KEY_BACKSLASH;
		case 0x34:
			return LS_KEY_Z;
		case 0x35:
			return LS_KEY_X;
		case 0x36:
			return LS_KEY_C;
		case 0x37:
			return LS_KEY_V;
		case 0x38:
			return LS_KEY_B;
		case 0x39:
			return LS_KEY_N;
		case 0x3A:
			return LS_KEY_M;
		case 0x3B:
			return LS_KEY_COMMA;
		case 0x3C:
			return LS_KEY_PERIOD;
		case 0x3D:
			return LS_KEY_SLASH;
		case 0x3E:
			return LS_KEY_RIGHT_SHIFT;
		case 0x3F:
			return LS_KEY_KP_MULTIPLY;
		case 0x40:
			return LS_KEY_LEFT_ALT;
		case 0x41:
			return LS_KEY_SPACE;
		case 0x42:
			return LS_KEY_CAPS_LOCK;
		case 0x43:
			return LS_KEY_F1;
		case 0x44:
			return LS_KEY_F2;
		case 0x45:
			return LS_KEY_F3;
		case 0x46:
			return LS_KEY_F4;
		case 0x47:
			return LS_KEY_F5;
		case 0x48:
			return LS_KEY_F6;
		case 0x49:
			return LS_KEY_F7;
		case 0x4A:
			return LS_KEY_F8;
		case 0x4B:
			return LS_KEY_F9;
		case 0x4C:
			return LS_KEY_F10;
		case 0x4D:
			return LS_KEY_NUM_LOCK;
		case 0x4E:
			return LS_KEY_SCROLL_LOCK;
		case 0x4F:
			return LS_KEY_KP_7;
		case 0x50:
			return LS_KEY_KP_8;
		case 0x51:
			return LS_KEY_KP_9;
		case 0x52:
			return LS_KEY_KP_SUBTRACT;
		case 0x53:
			return LS_KEY_KP_4;
		case 0x54:
			return LS_KEY_KP_5;
		case 0x55:
			return LS_KEY_KP_6;
		case 0x56:
			return LS_KEY_KP_ADD;
		case 0x57:
			return LS_KEY_KP_1;
		case 0x58:
			return LS_KEY_KP_2;
		case 0x59:
			return LS_KEY_KP_3;
		case 0x5A:
			return LS_KEY_KP_0;
		case 0x5B:
			return LS_KEY_KP_DECIMAL;

		case 0x5F:
			return LS_KEY_F11;
		case 0x60:
			return LS_KEY_F12;
		case 0x68:
			return LS_KEY_KP_ENTER;
		case 0x69:
			return LS_KEY_RIGHT_CONTROL;
		case 0x6A:
			return LS_KEY_KP_DIVIDE;
		case 0x6B:
			return LS_KEY_PRINT_SCREEN;
		case 0x6C:
			return LS_KEY_RIGHT_ALT;
		case 0x6D:
			return LS_KEY_PAUSE;
		case 0x6E:
			return LS_KEY_HOME;
		case 0x6F:
			return LS_KEY_UP;
		case 0x70:
			return LS_KEY_PAGE_UP;
		case 0x71:
			return LS_KEY_LEFT;
		case 0x72:
			return LS_KEY_RIGHT;
		case 0x73:
			return LS_KEY_END;
		case 0x74:
			return LS_KEY_DOWN;
		case 0x75:
			return LS_KEY_PAGE_DOWN;
		case 0x76:
			return LS_KEY_INSERT;
		case 0x77:
			return LS_KEY_DELETE;

		case 0x7B:
			return LS_KEY_F13;
		case 0x7C:
			return LS_KEY_F14;
		case 0x7D:
			return LS_KEY_F15;
		case 0x7E:
			return LS_KEY_F16;
		case 0x7F:
			return LS_KEY_F17;
		case 0x80:
			return LS_KEY_F18;
		case 0x81:
			return LS_KEY_F19;
		case 0x82:
			return LS_KEY_F20;
		case 0x83:
			return LS_KEY_F21;
		case 0x84:
			return LS_KEY_F22;
		case 0x85:
			return LS_KEY_LEFT_SUPER;
		case 0x86:
			return LS_KEY_RIGHT_SUPER;
		case 0x87:
			return LS_KEY_MENU;

		default:
			return LS_KEY_UNKNOWN;
	}
}

_FORCE_INLINE_ LSMouseButton x11_map_mbutton(uint32 x11_button) {
	switch (x11_button) {
		case Button1:
			return LS_MOUSE_BUTTON_1;
		case Button2:
			return LS_MOUSE_BUTTON_2;
		case Button3:
			return LS_MOUSE_BUTTON_3;
		case Button4:
			return LS_MOUSE_BUTTON_4;
		case Button5:
			return LS_MOUSE_BUTTON_5;
		default:
			return LS_MOUSE_BUTTON_NONE;
	}
}

#endif // X11_KEYMAP_H